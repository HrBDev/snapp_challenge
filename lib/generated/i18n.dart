
import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

//This file is automatically generated. DO NOT EDIT, all your changes would be lost.

class S implements WidgetsLocalizations {
  const S();

  static const GeneratedLocalizationsDelegate delegate =
      const GeneratedLocalizationsDelegate();

  static S of(BuildContext context) =>
      Localizations.of<S>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get map_screen_available_snapps => "";
  String get map_screen_destination => "";
  String get map_screen_drawer_about => "";
  String get map_screen_drawer_credit_plus => "";
  String get map_screen_drawer_exit => "";
  String get map_screen_drawer_fav_addresses => "";
  String get map_screen_drawer_invite => "";
  String get map_screen_drawer_messages => "";
  String get map_screen_drawer_rides => "";
  String get map_screen_drawer_settings => "";
  String get map_screen_drawer_snapp_food_promotion => "";
  String get map_screen_drawer_support => "";
  String get map_screen_drawer_transactions => "";
  String get map_screen_drawer_usr_info => "";
  String get map_screen_origin => "";
  String get map_screen_title => "";
}

class fa_IR extends S {
  const fa_IR();

   @override
  TextDirection get textDirection => TextDirection.rtl;

  @override
  String get map_screen_origin => "مبدأ";
  @override
  String get map_screen_drawer_fav_addresses => "آدرس‌های منتخب";
  @override
  String get map_screen_title => "کجا هستید ؟";
  @override
  String get map_screen_drawer_settings => "تنظیمات";
  @override
  String get map_screen_drawer_rides => "سفرها";
  @override
  String get map_screen_drawer_about => "درباره اسنپ";
  @override
  String get map_screen_drawer_invite => "سفر رایگان با دعوت از دوستان";
  @override
  String get map_screen_drawer_exit => "خروج";
  @override
  String get map_screen_available_snapps => "اسنپ موجود";
  @override
  String get map_screen_drawer_credit_plus => "افزایش اعتبار";
  @override
  String get map_screen_drawer_snapp_food_promotion => "با اسنپ فود، آنلاین غذا سفارش دهید";
  @override
  String get map_screen_drawer_messages => "پیام‌ها";
  @override
  String get map_screen_drawer_support => "پشتیبانی";
  @override
  String get map_screen_destination => "مقصد";
  @override
  String get map_screen_drawer_usr_info => "اطلاعات کاربری";
  @override
  String get map_screen_drawer_transactions => "گردش حساب";
}

class en extends S {
  const en();
}


class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[

      const Locale("fa", "IR"),
      const Locale("en", ""),

    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      final Locale languageLocale = new Locale(locale.languageCode, "");
      if (supported.contains(locale))
        return locale;
      else if (supported.contains(languageLocale))
        return languageLocale;
      else {
        final Locale fallbackLocale = fallback ?? supported.first;
        return fallbackLocale;
      }
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    final String lang = getLang(locale);
    switch (lang) {

      case "fa_IR":
        return new SynchronousFuture<WidgetsLocalizations>(const fa_IR());
      case "en":
        return new SynchronousFuture<WidgetsLocalizations>(const en());

      default:
        return new SynchronousFuture<WidgetsLocalizations>(const S());
    }
  }

  @override
  bool isSupported(Locale locale) => supportedLocales.contains(locale);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;
}

String getLang(Locale l) => l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
